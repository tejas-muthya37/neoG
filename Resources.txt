__________________________________________________________________________________________________________________________________________________________________________________________
	
	Font Awesome

	<script src="https://kit.fontawesome.com/6bba1b5d71.js" crossorigin="anonymous"></script>

	Google Fonts
	
	<link rel="preconnect" href="https://fonts.googleapis.com" />
    	<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    	<link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500&display=swap" rel="stylesheet"/>

	font-family: 'Roboto', sans-serif;

<nav>
        <div className="logo" onClick={scrollTop1}>
          <Link style={{ textDecoration: "none" }} to="/">
            <h2 className="logo_text">‡≤Æ‡≤ß‡≥ç‡≤µ‡≤™‡≤æ‡≤ï</h2>
          </Link>
        </div>

        <ul id="nav-links" className="nav-links">
          <li onClick={scrollTop}>
            <Link to="/">Home</Link>
          </li>
          <li onClick={scrollTop}>
            <Link to="/about">About Us</Link>
          </li>
          <li onClick={scrollTop}>
            <Link to="/contact">Contact Us</Link>
          </li>
          <li onClick={scrollTop}>
            <Link to="/products">Our Products</Link>
          </li>
        </ul>

        <div className="nav-basket">
          <div>
            <Link onClick={scrollTop1} to="/cart">
              <ShoppingCartIcon />
            </Link>
          </div>
          <span className="nav-basketCount">{basket?.length}</span>
        </div>

        <div onClick={handleClick} id="burger" className="burger">
          <div className="line1"></div>
          <div className="line2"></div>
          <div className="line3"></div>
        </div>
      </nav>

function handleClick() {
    const burger = document.querySelector(".burger");
    const nav = document.querySelector(".nav-links");
    const links = document.querySelectorAll(".nav-links li");

    nav.classList.toggle("navSlide");

    links.forEach((link, index) => {
      if (link.style.animation) {
        link.style.animation = "";
      } else {
        link.style.animation = `navLinkFade 0.25s ease forwards ${index / 7}s`;
      }
    });

    burger.classList.toggle("toggle");
  }

* {
  padding: 0px;
  margin: 0px;
  box-sizing: border-box;
}

.header a {
  color: white;
}

nav {
  position: fixed;
  top: 0;
  right: 0;
  left: 0;
  z-index: 999999;
  display: flex;
  min-height: 9vh;
  align-items: center;
  background-color: #0d7377;
}

/* .logo img {
  height: 60px;
  padding-top: 5px;
  margin-left: 50%;
} */

.nav-links {
  display: flex;
  justify-content: space-around;
  width: 35%;
  list-style: none;
  color: #e6e6e6;
  letter-spacing: 3px;
  font-size: medium;
  font-weight: 600;
  text-transform: uppercase;
  margin-left: 650px;
  padding-top: 15px;
  font-family: "Roboto", sans-serif;
}

.nav-links a {
  text-decoration: none;
  color: #e6e6e6;
  padding-bottom: 5px;
}

.burger {
  cursor: pointer;
  display: none;
}

.burger div {
  height: 3px;
  width: 25px;
  background-color: #e6e6e6;
  margin: 5px;
}

.logo_text {
  font-family: "Akaya Kanadaka", cursive;
  font-weight: 100;
  margin-left: 50px;
  letter-spacing: 2px;
}

.nav-basket {
  display: flex;
  align-items: center;
  color: white;
  margin-left: 50px;
  cursor: pointer;
}

.nav-basketCount {
  margin-left: 10px;
  margin-right: 10px;
}

@media screen and (max-width: 1400px) {
  body {
    overflow-x: hidden;
  }

  .logo_text {
    margin-left: 30px;
  }

  /* .logo img {
    height: 55px;
    margin-left: 25%;
  } */

  .burger {
    display: block;
    position: absolute;
    right: 25px;
  }

  .nav-basket {
    position: absolute;
    right: 25%;
  }

  .nav-links {
    position: absolute;
    right: 0px;
    top: 9vh;
    height: 93vh;
    background-color: #0d7377;
    display: flex;
    flex-direction: column;
    align-items: center;
    width: 100%;
    transform: translateX(100%);
    transition: transform 0.4s ease-in;
    z-index: 9999;
    padding-top: 0px;
    padding-bottom: 70px;
  }

  .nav-links li {
    opacity: 0;
  }
}

.navSlide {
  transform: translateX(0);
}

@keyframes navLinkFade {
  from {
    opacity: 0;
    transform: translateX(50px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

.toggle .line1 {
  transform: rotate(-45deg) translate(-5px, 6px);
}

.toggle .line3 {
  transform: rotate(45deg) translate(-5px, -6px);
}

.toggle .line2 {
  opacity: 0;
}

__________________________________________________________________________________________________________________________________________________________________________________________

	Staying committed to the #151daysofcode challenge! üí™üèº

	Day 18 :  Headers

	- Built different kinds of headers for the component library.
__________________________________________________________________________________________________________________________________________________________________________________________

	Blog topics

	- CSS Box Model 
	- Compiler vs Transpiler
	- JavaScript - Compiled or Interpreted?
	- Temporal Dead Zone
	- What does Babel do?
	- Nullish Coalescing
	- History of JavaScript ( Great story )	
	- Multithreading vs Async
	- Web Workers
__________________________________________________________________________________________________________________________________________________________________________________________
	
	Resources :-

	- JS Async - https://youtu.be/8aGhZQkoFbQ
	
	- Functional Programming - https://eloquentjavascript.net/05_higher_order.html
	
	- Arrow Functions - https://javascript.info/arrow-functions-basics

	- Destructuring - https://javascript.info/destructuring-assignment

	- var, let and const - https://javascript.info/variables

	- Rest parameters and Spread syntax - https://javascript.info/rest-parameters-spread

	- Template Literals - https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals

	- Modules - https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules

	- Shorthand object and computed property names - https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Object_initializer#computed_property_names
	
	- Temporal Dead Zone - https://stackoverflow.com/questions/33198849/what-is-the-temporal-dead-zone
	
	- Import and Export - https://javascript.info/import-export

	- ES6 Handbook - https://devdojo.com/shreya/es6-handbook

	- ESLint Rules - https://eslint.org/docs/rules/

	- CSS Positioning - https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Positioning

	- CSS Box Shadows - https://getcssscan.com/css-box-shadow-examples

	- CSS Flexbox - https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Flexbox

	- CSS Complete Guide to Flexbox -  https://css-tricks.com/snippets/css/a-guide-to-flexbox/

	- CSS Grid - https://css-tricks.com/getting-started-css-grid/
	
	- CSS Grid Layering - https://codesandbox.io/s/nice-gauss-dl4tx?file=/index.html

	- CSS Responsive Design - https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Responsive_Design
	
	- CSS Responsive Web Design by Udacity - https://www.udacity.com/course/responsive-web-design-fundamentals--ud893

	- CSS Flex vs Grid - https://css-tricks.com/quick-whats-the-difference-between-flexbox-and-grid/

	- Responsive Web Design by Udacity - https://www.udacity.com/course/responsive-web-design-fundamentals--ud893

	- Organising your CSS - https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Organizing

	- CSS In Depth - https://web.dev/learn/css/

	- How To Come Up With A Brand Name - https://www.tungstenbranding.com/how-to-come-up-with-brand-name/

	- Introduction to Callbacks - https://javascript.info/callbacks

	- Modern Asynchronous JavaScript with Async/Await - https://nodejs.dev/learn/modern-asynchronous-javascript-with-async-and-await

	- Promises - https://javascript.info/promise-basics

__________________________________________________________________________________________________________________________________________________________________________________________

	Pointers :-

	const btnText = document.querySelector(<some query>);
	btnText.innerText = "demo" // won't work.